/**
 * Communication between the Ambassador Agent and the Director service
 * to populate the Central Edge Policy Console, which is a cloud service
 * run by Datawire.
 */
 syntax = "proto3";

 import "google/protobuf/duration.proto";
 import "google/protobuf/timestamp.proto";
 
 import "prometheus/metrics.proto";
 
 package agent;
 
 option go_package = "./agent";
 
 // IngressInfoRequest represents the intercept properties required to resolve ingress info
 // Copied from telepresence-pro/rpc/userdaemon/userdaemon.proto
 message IngressInfoRequest {
   // The service uid defined in the service's metadata
   string service_uid = 1;
 
   // The service name
   string service_name = 2;
 
   // The port name as defined in the service specs
   string service_port_identifier = 3;
 
   // The port value as defined in the service specs
   int32 service_port = 4;
 
   // The namespace in which the intercept takes place
   string namespace = 5;
 }
 
 // IngressInfoResponse represents the ingress properties required to configure a preview url
 message IngressInfoResponse {
   // The layer-3 host
   string host = 1;
 
   // The layer-4 port
   int32 port = 2;
 
   // Whether or not to use TLS on the port
   bool use_tls = 3;
 
   // The layer-5 host
   string l5host = 4;
 }
 
 // Agent server
 service AmbassadorAgent {
   // IngressInfo uses information from watching the cluster to detect edgissary,
   // which is relayed to the Telepresence traffic-manager for proprietary intercepts
   rpc IngressInfo(IngressInfoRequest) returns (IngressInfoResponse) {}
 }
 